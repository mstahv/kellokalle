import { test, expect } from '@playwright/test';

test.describe('Simulaatiotila', () => {
  test('simulaatiotilan valintaruutu on oletuksena valittuna', async ({ page }) => {
    await page.goto('/');

    const checkbox = page.locator('input[type="checkbox"]');
    await expect(checkbox).toBeChecked();

    // Tarkista ett√§ info-laatikko n√§kyy
    await expect(page.locator('text=Simulaatiotilassa kello alkaa')).toBeVisible();
  });

  test('simulaatiotilan voi kytke√§ pois p√§√§lt√§', async ({ page }) => {
    await page.goto('/');

    const checkbox = page.locator('input[type="checkbox"]');
    await checkbox.uncheck();

    await expect(checkbox).not.toBeChecked();

    // Tarkista ett√§ info-laatikko ei n√§y
    await expect(page.locator('text=Simulaatiotilassa kello alkaa')).not.toBeVisible();
  });

  test('simulaatiotilassa n√§kyy SIMULAATIO-merkint√§', async ({ page }) => {
    test.setTimeout(30000);

    await page.goto('/');

    // Varmista ett√§ simulaatio on p√§√§ll√§
    const checkbox = page.locator('input[type="checkbox"]');
    await expect(checkbox).toBeChecked();

    // Lataa esimerkki
    await page.getByRole('button', { name: /k√§yt√§ esimerkki√§/i }).click();
    await page.getByRole('button', { name: /lataa l√§ht√∂lista/i }).click();

    // Odota l√§ht√∂kellon√§kym√§√§
    await expect(page.locator('text=Aikaa l√§ht√∂√∂n').or(page.locator('text=Ei tulevia l√§ht√∂j√§'))).toBeVisible({ timeout: 15000 });

    // Tarkista ett√§ SIMULAATIO-merkint√§ n√§kyy
    await expect(page.locator('text=üé¨ SIMULAATIO')).toBeVisible();
  });

  test('simulaatiotilassa n√§kyy kellon nopeutuspainikkeet', async ({ page }) => {
    test.setTimeout(30000);

    await page.goto('/');

    // Lataa esimerkki simulaatiotilassa
    await page.getByRole('button', { name: /k√§yt√§ esimerkki√§/i }).click();
    await page.getByRole('button', { name: /lataa l√§ht√∂lista/i }).click();

    // Odota l√§ht√∂kellon√§kym√§√§
    await expect(page.locator('text=Aikaa l√§ht√∂√∂n').or(page.locator('text=Ei tulevia l√§ht√∂j√§'))).toBeVisible({ timeout: 15000 });

    // Tarkista ett√§ nopeutuspainikkeet n√§kyv√§t
    await expect(page.getByRole('button', { name: '+10s' })).toBeVisible();
    await expect(page.getByRole('button', { name: '+30s' })).toBeVisible();
    await expect(page.getByRole('button', { name: '+1min' })).toBeVisible();
  });

  test('kellon nopeutuspainikkeet n√§kyv√§t ja ovat klikattavissa', async ({ page }) => {
    test.setTimeout(30000);

    await page.goto('/');

    // Lataa esimerkki
    await page.getByRole('button', { name: /k√§yt√§ esimerkki√§/i }).click();
    await page.getByRole('button', { name: /lataa l√§ht√∂lista/i }).click();

    // Odota l√§ht√∂kellon√§kym√§√§
    await expect(page.locator('text=Aikaa l√§ht√∂√∂n').or(page.locator('text=Ei tulevia l√§ht√∂j√§'))).toBeVisible({ timeout: 15000 });

    // Tarkista ett√§ nopeutuspainikkeet ovat n√§kyviss√§ ja klikattavissa
    const skip10Button = page.getByRole('button', { name: '+10s' });
    await expect(skip10Button).toBeVisible();
    await expect(skip10Button).toBeEnabled();

    // Klikkaa nappia - ei pit√§isi heitt√§√§ virheit√§
    await skip10Button.click();

    // Tarkista ett√§ sovellus on edelleen toiminnassa
    await expect(page.locator('text=üé¨ SIMULAATIO')).toBeVisible();
  });

  test('ilman simulaatiotilaa ei n√§y SIMULAATIO-merkint√§√§ eik√§ nopeutuspainikkeita', async ({ page }) => {
    test.setTimeout(30000);

    await page.goto('/');

    // Kytke simulaatio pois p√§√§lt√§
    const checkbox = page.locator('input[type="checkbox"]');
    await checkbox.uncheck();

    // Lataa esimerkki
    await page.getByRole('button', { name: /k√§yt√§ esimerkki√§/i }).click();
    await page.getByRole('button', { name: /lataa l√§ht√∂lista/i }).click();

    // Odota l√§ht√∂kellon√§kym√§√§
    await expect(page.locator('text=Aikaa l√§ht√∂√∂n').or(page.locator('text=Ei tulevia l√§ht√∂j√§'))).toBeVisible({ timeout: 15000 });

    // Tarkista ett√§ SIMULAATIO-merkint√§ ei n√§y
    await expect(page.locator('text=üé¨ SIMULAATIO')).not.toBeVisible();

    // Tarkista ett√§ nopeutuspainikkeet eiv√§t n√§y
    await expect(page.getByRole('button', { name: '+10s' })).not.toBeVisible();
    await expect(page.getByRole('button', { name: '+30s' })).not.toBeVisible();
    await expect(page.getByRole('button', { name: '+1min' })).not.toBeVisible();
  });
});
